#!/bin/bash

## variable
declare -g _gs_lock_path="${XDG_RUNTIME_DIR}/_bwraplua/lock"

## array
declare -ga "_ga_loadexec_if"
declare -ga "_ga_loadexec_fi"

## function
function _gF_inittool_notify () 
{
        if [[ "${1:?}" == "ERROR" ]] ; then
                echo -e "\033[31m ${1}: ${2:?} \033[0m" ;
                '/usr/bin/notify-send' --app-name="bwraplua" "${1}" "${2}" ;
        elif [[ "${1}" == "WARNING" ]] ; then
                echo -e "\033[33m ${1}: ${2:?} \033[0m" ;
                '/usr/bin/notify-send' --app-name="bwraplua" "${1}" "${2}" ;
        fi
}
declare -fr "_gF_inittool_notify"
#       #
function _gF_loadover () 
{
        declare -i _li_loadexec="${#_ga_loadexec_fi[@]}" ;
        for (( _li_loop=0 ; _li_loop<${_li_loadexec} ; _li_loop++ )) ; do
                '/bin/bash' -c "${_ga_loadexec_if[${_li_loop}]}" ;
                if [[ "${?}" == "0" ]] ; then
                        '/bin/bash' -c "${_ga_loadexec_fi[${_li_loop}]}" ;
                fi
        done
}
declare -fr "_gF_loadover"
#       #
function _gF_loadexec_set () 
{
        _ga_loadexec_if[${#_ga_loadexec_if[@]}]="${1:?}" ;
        _ga_loadexec_fi[${#_ga_loadexec_fi[@]}]="${2:?}" ;
}
declare -fr "_gF_loadexec_set"
#       #
function _gF_loadexec_kill () 
{
        declare -i "_li_load_exec" ;
        _li_load_exec="$('/usr/bin/pgrep' -n ${1:?})" ;
        '/usr/bin/ps' | '/usr/bin/grep' "${_li_load_exec}" ;
        if [[ "${?}" != "0" || "${_li_load_exec}" -lt "${$}" ]] ; then
                return 1 ;
        fi
        _ga_loadexec_if[${#_ga_loadexec_if[@]}]="'/usr/bin/ps' | '/usr/bin/grep' '${_li_load_exec}'" ;
        _ga_loadexec_fi[${#_ga_loadexec_fi[@]}]="'/usr/bin/kill' -15 '${_li_load_exec}'" ;
}
declare -fr "_gF_loadexec_kill"
#       #
function _gF_loadexec_pkill () 
{
        declare "_ls_tty" ;
        _ls_tty="$(tty)" ;
        declare _ls_ttyterm="${_ls_tty##*/dev/}" ;
        _ga_loadexec_if[${#_ga_loadexec_if[@]}]="'/usr/bin/pgrep' -t '${_ls_ttyterm}' '${1:?}'" ;
        _ga_loadexec_fi[${#_ga_loadexec_fi[@]}]="'/usr/bin/pkill' -15 -t '${_ls_ttyterm}' '${1}'" ;
}
declare -fr "_gF_loadexec_pkill"
#       #
function _gF_loadexec_lockw () 
{
        '/usr/bin/flock' -Fx -w "${3:-5}" "${_gs_lock_path}/${1:?}/${2:?}" '/usr/bin/sleep' "0.1s" ;
        if [[ "${?}" != "0" && -r "${_gs_lock_path}/${1}/${2}" ]] ; then
                _gF_inittool_notify "WARNING" "The dependency is being used." ;
                _gF_loadover ;
                exit 1 ;
        fi
        #       #
        '/usr/bin/mkdir' -pv "${_gs_lock_path}/${1}" || exit ;
        '/usr/bin/flock' -Fx "${_gs_lock_path}/${1}/${2}" '/usr/bin/sleep' "${4:-5s}" || exit &
}
declare -fr "_gF_loadexec_lockw"
#       #
function _gF_loadexec_locko () 
{
        '/usr/bin/flock' -Fn "${_gs_lock_path}/${1:?}/${2:?}" '/usr/bin/sleep' "0.1s" ;
        if [[ "${?}" != "0" && -r "${_gs_lock_path}/${1}/${2}" ]] ; then
                _gF_inittool_notify "WARNING" "The program is running." ;
                _gF_loadover ;
                exit 1 ;
        fi
        #       #
        '/usr/bin/mkdir' -pv "${_gs_lock_path}/${1}" || exit ;
        '/usr/bin/flock' -Fx "${_gs_lock_path}/${1}/${2}" '/usr/bin/tail' -f "/dev/null" || exit &
        declare -i _li_flock_exec="${!}" ;
        _ga_loadexec_if[${#_ga_loadexec_if[@]}]="'/usr/bin/ps' | '/usr/bin/grep' '${_li_flock_exec}'" ;
        _ga_loadexec_fi[${#_ga_loadexec_fi[@]}]="'/usr/bin/kill' -15 '${_li_flock_exec}'" ;
}
declare -fr "_gF_loadexec_locko"

